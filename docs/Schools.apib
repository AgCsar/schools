# Group Schools

'Schools' são as escolas associadas a uma conta.
'School Class' são as turmas de uma escola que existem em um determinado ano letivo/calendario escolar.

## Schools Collection [/schools{?_q,_sort,_with}]

### List Schools [GET]
<!-- include(ParameterFilter.md) -->

+ Parameters
    + _q (string, optional) - Pesquisa por palavra-chave, a correspondência e incluida conjunto de resultados.
        + Members
            +name
    + _sort (string, optional) - Ordena a coluna desejada, de forma acendente ou descendente.
    + _with (string, optional) - Obtem informações do recurso relacionado.
        + Members
            + schoolClasses
        
+ Request
    + Headers
            
            authorization: <!-- include(Token.md) -->

+ Response 200 (application/json)

    + Attributes 
        + Include (Paginator)
        + data (array)
            + (School)

### Create a New School [POST]

+ Request (application/json)
    + Headers
            
            authorization: <!-- include(Token.md) -->

    + Attributes (SchoolFillable)
    
+ Response 201 (application/json)

    + Attributes 
        + School (School)

            
## School [/schools/{school_id}{?_with}]

### View a school detail [GET]

+ Parameters
    + school_id: 1 (number) - Identificador único da escola
    + _with (string, optional) - Obtem informações do recurso relacionado.
        + Members
            + schoolClasses

+ Request 
    + Headers

            authorization: <!-- include(Token.md) -->

+ Response 200 (application/json)
    
    + Attributes 
        + School (School)
        
### Edit [PUT]

+ Parameters
    + school_id: 1 (number) - Identificador único da escola

+ Request (application/json)

    + Headers
            
            authorization: <!-- include(Token.md) -->
            
    + Attributes (SchoolFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + School (School)


### Delete [DELETE]

+ Parameters
    + school_id: 1 (number) - Identificador único da escola
    
+ Request (application/json)

    + Headers
            
            authorization: <!-- include(Token.md) -->

+ Response 204


## School Classes Collection [/school-classes{?_q,_sort,_with}]
### List School Classes [GET]

<!-- include(ParameterFilter.md) -->

+ Parameters
    + _q (string, optional) - Pesquisa por palavra-chave, a correspondência e incluida conjunto de resultados.
        + Members
            +identifier
    + _sort (string, optional) - Ordena a coluna desejada, de forma acendente ou descendente.
    + _with (string, optional) - Obtem informações do recurso relacionado.
        + Members 
            + shift - Turno.
            + students - Aluno.
            + schoolCalendar - Ano letivo.
            + subjects - Avaliação.

+ Request (application/json)

    + Headers
            
            authorization: <!-- include(Token.md) -->

+ Response 200 (application/json)

    + Attributes 
        + Include Paginator
        + data (array) 
            + (SchoolClass)
    
### Create a new school class [POST]

+ Request (application/json)
    + Headers
            
            authorization: <!-- include(Token.md) -->
            
    + Attributes (SchoolClassFillable)
            
+ Response 200 (application/json) 
    
    + Attributes 
        + school_class (SchoolClass)
            

## School Class [/school-classes/{school_class_id}{?_with}]

+ Parameters
    - school_class_id: 1 (number) - ID of the school class

### View a school class detail [GET]

+ Parameters
    + _with (string, optional) - Obtem informações do recurso relacionado.
        + Members 
            + shift - Turno.
            + students - Aluno.
            + schoolCalendar - Ano letivo.
            + subjects - Avaliação.

+ Request 
    + Headers

            authorization: <!-- include(Token.md) -->

+ Response 200 (application/json)

    + Attributes 
        + school_class (SchoolClass)


### Edit [PUT]

+ Parameters
    + school_class_id: 1 (number) - ID of the School

+ Request 
    + Headers
            
            authorization: <!-- include(Token.md) -->
            
    + Attributes (SchoolClassFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + school_class (SchoolClass)

            
### Delete [DELETE]

+ Parameters
    + school_class_id: 1 (number) - ID of the School

+ Request (application/json)

    + Headers
            
            authorization: <!-- include(Token.md) -->

+ Response 204

## Annual report [/school-classes/{school_class_id}/annual-report]

### View a annual report [GET]

+ Request
    + Headers

            authorization: <!-- include(Token.md) -->

+ Response 200 (application/json)

    + Attributes
        + students (array[object])
            + Include (Student)
            + school_calendar_report (object) - Relatório do aluno durante o calendário escolar
                + average: 9.2 (number) - Média do aluno no ano
                + average_calculation: `((4.6 + 1.2)*0.4 + (9 + 3.1)*0.6)/2` (string) - Formula da média do aluno
                + average_formula: `(({1º Bimestre}+...+ {4º Bimestre})*0.6)/2"` (string) - Calculo da média
                + absences: 22 (number) - Total de faltas no calendario escolar
            + phases_report (object)  - Relatório do aluno durante as fases do calendário escolar
                + school_calendar_phase_id - ID da fase do calendário escolar
                + average (number) - Média
                + average_calculation (string) - Calculo da média
                + average_formula (string) - Formula utilizada no calculo
                + absences (number) - Total de faltas na fase
                + student_grades (array[object]) - Notas do aluno que compõem a média da fase
                    + grade (number) - Nota
                    + assessment_id (number) - ID da avaliação


## School Calendar Collection [/school-calendars{?_q,_sort,_with}]

`School Calendar` é considerado nessa api como a definição do ano letivo,
contendo fases fases avaliativas do ano (Ex.: bimestres), feriados, férias,
inicio e fim do ano.

### List School Calendars [GET]

<!-- include(ParameterFilter.md) -->

+ Parameters
    + _q (string, optional) - Pesquisa por palavra-chave, a correspondência e incluida conjunto de resultados.
    + _sort (string, optional) - Ordena a coluna desejada, de forma acendente ou descendente.
    + _with (string, optional) - Obtem informações do recurso relacionado.
        + Members 
            + schoolClasses - Turmas do ano letivo.
            + phases - Fases avaliativas do ano letivo. Recurso (SchoolCalendarPhase)

+ Request (application/json)

    + Headers
            
            authorization: <!-- include(Token.md) -->

+ Response 200 (application/json)

    + Attributes 
        + Include Paginator
        + data (array) 
            + (SchoolCalendar)
    
### Create a new school calendar [POST]

+ Request (application/json)
    + Headers
            
            authorization: <!-- include(Token.md) -->
            
    + Attributes (SchoolCalendarFillable)
            
+ Response 200 (application/json) 
    
    + Attributes 
        + school_calendar (SchoolCalendar)
            

## School Calendar [/school-calendars/{school_calendar_id}{?_with}]

### View a school calendar detail [GET]

+ Parameters
    + school_calendar_id: 1 (number) - ID of the school class
    + _with (string, optional) - Obtem informações do recurso relacionado.
        + Members 
            + schoolClasses - Turmas do ano letivo.
            + phases - Fases avaliativas do ano letivo. Recurso (SchoolCalendarPhase)

+ Request 
    + Headers

            authorization: <!-- include(Token.md) -->

+ Response 200 (application/json)

    + Attributes 
        + school_class (SchoolClass)


### Edit [PUT]

+ Parameters
    + school_calendar_id: 1 (number) - ID of the school class

+ Request 
    + Headers
            
            authorization: <!-- include(Token.md) -->
            
    + Attributes (SchoolCalendarFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + school_calendar (SchoolCalendar)

### Delete [DELETE]

+ Parameters
    + school_calendar_id: 1 (number) - ID of the School

+ Request (application/json)

    + Headers
            
            authorization: <!-- include(Token.md) -->

+ Response 204

