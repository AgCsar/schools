FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Schools API

Schools é uma api para manter informações sobre escolas e seus registros administrativos.

# Group Auth

Ações relacionadas a autentificação, registro e manutenção de dados do perfil do usuário.

## Request access [/auth/request-access]
### Create a request access [POST]

Registra a solicitação de acesso do usuário.
O usuário é registrado como papel (role) de convidado (guest),
até que algum usuário que tenha permissão para liberação de usuários
confirme a solicitação de acesso e atribua um novo papel (role).

+ Request
    + Headers
    
            Autorization: Bearer "token id"
            
+ Response 200 (application/json)

        {
            "id": 100,
            "user_id": 10,
            "status": 0,
            "created_at": "2016-08-15 20:26:39",
            "updated_at": "2016-08-15 21:26:39"
            
        }

# Group Schools

Ações relacionadas a manter os dados das escolas (schools) e turmas.

## Schools Collection [/schools]

### List Schools [GET]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"

+ Response 200 (application/json)

    + Attributes (Schools)

### Create a New School [POST]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"

+ Request (application/json)

    + Attributes (SchoolFillable)

+ Response 201 (application/json)

    + Headers

            Location: /schools/1

    + Attributes (School)
            
## School [/schools/{school_id}]

+ Parameters
    + school_id (number) - ID of the School

### View a school detail [GET]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"

+ Response  200 (application/json)

    + Attributes (School)
        

### Edit [PUT]

+ Request (application/json)

    + Headers
            
            Autorization: Bearer "token id"
            
    + Attributes (SchoolFillable)
            
+ Response 200 (application/json)
    
    + Headers
            
            Location: /schools/1
            
    + Attributes (School)


### Delete [DELETE]

+ Response 204

        
## Classes Collection [/classes]

### List classes [GET]

+ Response 200 (application/json)

    + Attributes (Classes)
    
### Create a new class [POST]

+ Request (application/json)
    + Headers
            
            Autorization: Bearer "token id"
            
    + Attributes (ClassFillable)
            
+ Response 200 (application/json) 
    
    + Body
            
            {
                "id": 1,
                "identifier": "AB",
                "grade": {
                    "id": 1,
                    "name": "1st grade"
                },
                "shift": {
                    "id": 1,
                    "name": "Day shif"
                }
            }
            

## Class [/classes/{class_id}]

+ Parameters
    - class_id (number) - ID of the class

### View a class detail [GET]

+ Request 
    + Headers

            Autorization: Bearer "token id"

+ Response 200 (application/json)

    + Body
    
            {
                "id": 1,
                "identifier": "AB",
                "grade": {
                    "id": 1,
                    "name": "1st grade"
                },
                "shift": {
                    "id": 1,
                    "name": "Day shif"
                }
            }

### Delete [DELETE]

+ Response 204

### Edit [PUT]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"
            
    + Body 
    
            {
                "identifier": "AB",
                "grade_id": 1,
                "shift_id": 1
            }
            
+ Response 200 (apllication/json)
    
    + Headers
            
            Location: /schools/1
            
    + Body
            
            {
                "id": 1,
                "identifier": "AB",
                "grade": {
                    "id": 1,
                    "name": "1st grade"
                },
                "shift": {
                    "id": 1,
                    "name": "Day shif"
                }
            }
            
# Group Lessons

Ações relacionadas de programação de aulas.

## Lessons Collection [/lessons]

### List lessons [GET]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"

+ Response 200 (application/json)

    + Attributes (Lessons)
            
# Data structures 

## SchoolFillable (object)

+ name: Escola luz do saber (string) - Nome da escola

## School (SchoolFillable)

+ id (number) - Identificador único da escola

## Schools (array)

+ (School)

## ClassFillable (object)

+ identifier: A (string) - Abreviação/identificação da turma. Exmplo: B, para segunda turma do 1º ano (de 1 Ano B).

## Class (ClassFillable)

+ id: 1 (number) - Identificador único da turma.

## Classes (array)

+ (Class)

## Grade (object)

+ id: 1 (number) - Identificador único de um ano estudantíl. 
+ name: 3 Ano (string) - Nome do ano estudantíl. Exemplos: 2 Ano, 3 Ano, Jardim I, Jardim II.

## Shift (object)

+ id: 1 (number) - Identificador único do turno.
+ name: Matutino (string) - Nome do turno. Exmplo: Vespertino, matutino, noturno.


## Subject (object)

+ id: 1 (number) - Identificador único da disciplina.
+ name: Matématica  (string) - Nome da disciplina. Ex.: Matématica, Português, Fisica.

## Lesson (object)

+ id: 1 (number) - Identificador único  da aula.
+ date (Date) - Data da aual.
+ class (Class) - Turma onde a aula será aplicada.
+ subject (Subject) - Disciplina (Matématica, física, ...).
+ start (Date) - Data e horário de inicio da aula.
+ end (Date) - Data e horário de termino da aula.

## Lessons (array)

+ (Lesson)


## Date (object)

+ date: 2016-08-25T16:53:48+00:00 (string)
+ datetime: 1472143991 (number)
+ timeZone: America/Sao_Paulo (string)