FORMAT: 1A
HOST: http://localhost/api

# Schools API

Schools é uma api para manter informações sobre escolas e seus registros administrativos.

# Group Auth

Ações relacionadas a autentificação, registro e manutenção de dados do perfil do usuário.

## Request access [/auth/request-access]
### Create a request access [POST]

Registra a solicitação de acesso do usuário.
O usuário é registrado como papel (role) de convidado (guest),
até que algum usuário que tenha permissão para liberação de usuários
confirme a solicitação de acesso e atribua um novo papel (role).

+ Request
    + Headers
    
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo
    
    
+ Response 200 (application/json)
    
    + Attributes 
        + id: 1 (number) - Identificador único da solicitação
        + auth0_user_id: auth0|57c0840deae095471aba4093 (string) - id do usuário
        + status: 0 (number) - Situação da solicitação. 
                             0 pendente
                             1 negada
                             2 aprovada
        + created_at 2016-08-15 20:26:39 (string)
        + updated_at: 2016-08-15 21:26:39 (string)


# Group Schools

Ações relacionadas a manter os dados das escolas (schools) e turmas.

## Schools Collection [/schools{?_limit,_q,_sort,field}]

### List Schools [GET]

+ Parameters
    + _q (string, optional) - Fulltext search
    + _sort (string, optional) - Nome da coluna para ordenação. 
    + _limit (number, optional) - Limite por página
    + field (string, optional) - Veja [Doc de filtros](https://github.com/keviocastro/laravel-api-handler#filtering)
        
+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo

+ Response 200 (application/json)

    + Attributes (SchoolsPaginator)

### Create a New School [POST]

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo

+ Request (application/json)

    + Attributes (SchoolFillable)

+ Response 201 (application/json)

    + Headers

            Location: /schools/1

    + Attributes 
        + school (School)
            
## School [/schools/{school_id}]

+ Parameters
    + school_id (number) - ID of the School

### View a school detail [GET]

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo

+ Response  200 (application/json)

    + Attributes (School)
        

### Edit [PUT]

+ Request (application/json)

    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo
            
    + Attributes (SchoolFillable)
            
+ Response 200 (application/json)
    
    + Headers
            
            Location: /schools/1
            
    + Attributes (School)


### Delete [DELETE]

+ Response 204

# Group Person

## Students Collection [/students]

### List students [GET]

+ Request (application/json)
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo

+ Response 200 (application/json)

    + Attributes (StudentsPaginator)


        
## Classes Collection [/classes]

### List classes [GET]

+ Response 200 (application/json)

    + Attributes (Classes)
    
### Create a new class [POST]

+ Request (application/json)
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo
            
    + Attributes (ClassFillable)
            
+ Response 200 (application/json) 
    
    + Attributes (Class)
            

## Class [/classes/{class_id}]

+ Parameters
    - class_id (number) - ID of the class

### View a class detail [GET]

+ Request 
    + Headers

            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo

+ Response 200 (application/json)

    + Attributes (Class)


### Edit [PUT]

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo
            
    + Attributes (ClassFillable)
            
+ Response 200 (application/json)
    
    + Attributes (Classes)

            
### Delete [DELETE]

+ Response 204
            
# Group Lessons

Ações relacionadas de programação de aulas.

## Lessons Collection [/lessons]

### List lessons [GET]

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3MjcwOTcxMCwiaWF0IjoxNDcyNjczNzEwfQ.3V85ZihcGfCEe855RcOs22UyIELLmoRIUquSR4GX3Mo

+ Response 200 (application/json)

    + Attributes (Lessons)
            
# Data structures 

## SchoolFillable (object)

+ name: Escola luz do saber (string) - Nome da escola

## School (SchoolFillable)

+ id: 1 (number) - Identificador único da escola
+ updated_at: `2016-08-30 13:17:11` (string) - Data da ultima alteração da escola
+ created_at: `2016-08-30 13:17:11` (string) - Data de cadastro

## Schools (array)

+ (School)

## SchoolsPaginator

+ Include (Paginator)
+ data (Schools)

## ClassBase (object)

+ identifier: A (string) - Abreviação/identificação da turma. Exmplo: B, para segunda turma do 1º ano (de 1 Ano B).

## ClassFillable (ClassBase)

+ grade_id: 1 (number) - Id do ano estudantíl.
+ shift_id: 1 (number) - Id do turno.

## Class (ClassBase)

+ id: 1 (number) - Identificador único da turma.
+ grade (Grade) - Ano estudantíl (Jardim I/1º Ano/...) da turma.
+ schift (Shift) - Turno (vespertino/matutino/...) da turma.

## Classes (array)

+ (Class)

## Grade (object)

+ id: 1 (number) - Identificador único de um ano estudantíl. 
+ name: 3 Ano (string) - Nome do ano estudantíl. Exemplos: 2 Ano, 3 Ano, Jardim I, Jardim II.

## Shift (object)

+ id: 1 (number) - Identificador único do turno.
+ name: Matutino (string) - Nome do turno. Exmplo: Vespertino, matutino, noturno.


## Subject (object)

+ id: 1 (number) - Identificador único da disciplina.
+ name: Matématica  (string) - Nome da disciplina. Ex.: Matématica, Português, Fisica.

## Lesson (object)

+ id: 1 (number) - Identificador único  da aula.
+ date (Date) - Data da aual.
+ class (Class) - Turma onde a aula será aplicada.
+ subject (Subject) - Disciplina (Matématica, física, ...).
+ start (Date) - Data e horário de inicio da aula.
+ end (Date) - Data e horário de termino da aula.

## Lessons (array)

+ (Lesson)

## Student (object)

+ name: Caio Fernando Chaves (string) - Nome
+ age: 15 (number) - Idade
+ birthday: `2001-04-21` (string) - Data de aniversário
+ class (Class)
+ piture: `https://randomuser.me/api/portraits/lego/6.jpg` (string) - Foto
+ gender: male (string)
+ responsible (array)
    + (object)
        + name: Maria ferreira da silva (string)  
    + (object)
        + name: Ântonio Carlos Benutino (string)
+ `place_of_birth` (City)
+ more: É filho de pais divorciados. Reside a avó materna (string)

## Students (array)

+ (Student)

## StudentsPaginator

+ Include Paginator
+ data (array) 
    + (Student)

## Paginator (object)

+ total: 25 (number) - Total de resultados encontrados
+ per_page: 15 (number) - Quantidade de resultados por página
+ current_page: 1 (number) - Página atual
+ last_page: 2 (number) - Ultima página
+ next_page_url: `http://localhost/api/<resource>?page=2` (string) - Url para resultados da proxima página
+ prev_page_url: null (string) - Url para resultados da página anterior
+ from: 1 (number) - Número inicial de resultados de paginação da página atual
+ to: 15 (number) - Número final de resultados de paginação da página atual

## City (object)

+ id: 1 (number) - Identificador único da cidade
+ name: Goiânia (string) - Nome da cidade
+ state (State)

## State (object)

+ id: 1 (number) - Identificador único do estado
+ name: Goiás (string) - Nome
+ federated_unit: GO (string) - Código de unidade federativa


## Date (object)

+ date: 2016-08-25T16:53:48+00:00 (string)
+ datetime: 1472143991 (number)
+ timeZone: America/Sao_Paulo (string)