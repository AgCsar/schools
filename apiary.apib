FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Schools API

Schools é uma api para manter informações sobre escolas e seus registros administrativos.

# Data Structures

## School (object)

+ id (number) - Identificador unico da escola
+ name (string) - Nome da escola

# Group Auth

Ações relacionadas a autentificação, registro e manutenção de dados do perfil do usuário.

## Request access [/auth/request-access]
### Create a request access [POST]

Registra a solicitação de acesso do usuário.
O usuário é registrado como papel (role) de convidado (guest),
até que algum usuário que tenha permissão para liberação de usuários
confirme a solicitação de acesso e atribua um novo papel (role).

+ Request
    + Headers
    
            Autorization: Bearer "token id"
            
+ Response 200 (application/json)

        {
            "id": 100,
            "user_id": 10,
            "status": 0,
            "created_at": "2016-08-15 20:26:39",
            "updated_at": "2016-08-15 21:26:39"
            
        }

# Group Schools

Ações relacionadas a manter os dados das escolas (schools) e turmas.

## Schools Collection [/schools]

### List Schools [GET]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "name": "School name"
            }
        ]

### Create a New School [POST]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"

+ Request (application/json)

        {
            "name": "School name"
        }

+ Response 201 (application/json)

    + Headers

            Location: /schools/1

    + Body

            {
                "id": 1,
                "created_at": "2015-08-05T08:40:51.620Z",
                "updated_at": "2016-10-07T08:40:51.620Z"
            }
            
## School [/schools/{school_id}]

+ Parameters
    + school_id (number) - ID of the School

### View a school detail [GET]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"

+ Response  200 (application/json)
    
        {
            "id": 1,
            "name: "School name"
        }
        
        

### Delete [DELETE]

+ Response 204

### Edit [PUT]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"
            
+ Response 200 (apllication/json)
    
    + Headers
            
            Location: /schools/1
            
    + Body
            
            {
                "id": 1,
                "name": "School name"
            }

        
## Classes Collection [/classes]

### List classes [GET]

+ Response 200 (apllication/json)

    + Body
    
            [
                {
                    "id": 1,
                    "identifier": "AB",
                    "grade": {
                        "id": 1,
                        "name": "1st grade"
                    },
                    "shift": {
                        "id": 1,
                        "name": "Day shif"
                    }
                }
            ]
    
### Create a new class [POST]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"
            
    + Body
    
            {
                "identifier": "AB",
                "grade_id": 1,
                "shift_id": 1
            }
            
+ Response 200 (application/json) 
    
    + Body
            
            {
                "id": 1,
                "identifier": "AB",
                "grade": {
                    "id": 1,
                    "name": "1st grade"
                },
                "shift": {
                    "id": 1,
                    "name": "Day shif"
                }
            }
            

## Class [/classes/{class_id}]

+ Parameters
    - class_id (number) - ID of the class

### View a class detail [GET]

+ Request 
    + Headers

            Autorization: Bearer "token id"

+ Response 200 (application/json)

    + Body
    
            {
                "id": 1,
                "identifier": "AB",
                "grade": {
                    "id": 1,
                    "name": "1st grade"
                },
                "shift": {
                    "id": 1,
                    "name": "Day shif"
                }
            }

### Delete [DELETE]

+ Response 204

### Edit [PUT]

+ Request 
    + Headers
            
            Autorization: Bearer "token id"
            
    + Body 
    
            {
                "identifier": "AB",
                "grade_id": 1,
                "shift_id": 1
            }
            
+ Response 200 (apllication/json)
    
    + Headers
            
            Location: /schools/1
            
    + Body
            
            {
                "id": 1,
                "identifier": "AB",
                "grade": {
                    "id": 1,
                    "name": "1st grade"
                },
                "shift": {
                    "id": 1,
                    "name": "Day shif"
                }
            }
            
# Group Events

Ações relacionadas a manipulação de eventos atribuidos aos usuários.
Um evento pode ser qualquer atividade programada em uma data, tais como: aulas, reuniões....

## Events Collection [/events]

### List events [GET]

Lista os eventos do usuário logado (identificado pelo "token id")

+ Request 
    + Headers
            
            Autorization: Bearer "token id"

+ Response 200 (application/json)

    + Body
    
            {
                "id": 1,
                "type": "lesson",
                "event": {
                    "id": 1,
                    "subject": {
                        "name": "Mathematics"
                    },
                    "class": {
                        "id": 1,
                        "identifier": "AB"
                    }
                }
            }
            
# Data structures 

## Class (object)

+ id (number) - Identificador único da classe
+ identifier (string) - Abreviação/identificação da turma. Exmplo: B, para segunda turma 1do 1º ano (de 1 Ano B).

## Grade (object)

+ id (number) - Identificador único de um ano estudantíl. 
+ name (string) - Nome do ano estudantíl. Exemplos: 2 Ano, 3 Ano, Jardim I, Jardim II.

## Shift (object)

+ id (number) - Identificador único do turno.
+ name (string) - Nome do turno. Exmplo: Vespertino, matutino, noturno.