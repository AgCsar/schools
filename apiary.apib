FORMAT: 1A
HOST: http://localhost/api

# Schools API

Schools é uma api para manter informações sobre escolas e seus registros administrativos.

# Authentication

A autentificação de usuário para acesso aos recursos da api, deve ser feita atribuindo
sempre o seguinte cabeçario na requisição:

`authorizavtion: Bearer token_id`

Onde "token id" é obtido durante a autenficação do usuário no microservice de atentificação
auth0 através do dominio "logos.auth0.com".
Veja ver mais detalhes de como realizar essa autentificação nesse link: https://auth0.com/docs 

# Group Auth and Account

## Request access [/auth/request-access]

`Request access` são solicitações de acesso que um usuário faz a uma conta.

Exemplo: considerando que a Escola Luz do Saber tem uma conta na sua aplicação, e o Professor Medeiros 
vai começar a utilizar o aplicativo para registrar presenças e notas dos alunos. Então o 
Professor Medeiros acessa seu aplicativo informando usuário e senha para se cadastrar. Com isso o cadastro do Professor Medeiros fica pendente até que um usuário da Escola Luz do Saber com permissão para liberação confirme seu cadastro. 

### Create a request access [POST]

+ Request
    + Headers
    
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
    
    
+ Response 200 (application/json)
    
    + Attributes
        + request_access (object) 
            + id: 1 (number) - Identificador único da solicitação
            + user_id: auth0|57c0840deae095471aba4093 (string) - id do usuário no microservice de autentificação auth0.
            + status: 0 (number) - Situação da solicitação. 
                                0 pendente
                                1 negada
                                2 aprovada
            + created_at: `2016-08-15 20:26:39` (string) Data que a solicitação foi criada
            + updated_at: `2016-08-15 21:26:39` (string) Data da ultima alteração da solicitação



## Account settings [/account-config]

Configurações da contado do usuário logado.

### View a account settings [GET]

+ Request
    + Headers
    
            authorization: Bearer <token_id>

+ Response 200 (application/json)

    + Attributes
        + account_config (object)
            
            + percentage_absences_reprove (object) - `Percentual máximo de faltas que um aluno pode ter para não ser reprovado. Exemplo: Existem 200 aulas de Matématica no ano, e consideramos que percentage_absences_reprove == 15, então o aluno pode faltar no máximo 30 aulas (200*0,15).`
                + value: 20 (number)

            + grade_threshold_great (object) - `Se o aluno tiver média igual ou acima dessa nota, ele é considerado ótimo`
                + value: 9 (number)
            
            + grade_threshold_good (object) - `Se o aluno tiver média igual ou acima dessa nota, e menor do que "grade_threshold_great", ele é considerado bom.`
                + value:  6 (number)
            
            + passing_grade_threshold (object) - `Média mínima para o aluno ser aprovado em uma disciplina`
                + value: 6 (number)




# Group Schools

'Schools' são as escolas associadas a uma conta.
'School Class' são as turmas de uma escola que existem em um determinado ano letivo/calendario escolar.

## Schools Collection [/schools{?_q,_sort}]

### List Schools [GET]

+ Parameters
    + _q (string, optional) - Fulltext search.
    + _sort (string, optional) - Nome da coluna para ordenação acendente.
        
+ Request
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response 200 (application/json)

    + Attributes 
        + Include (Paginator)
        + data (array)
            + (School)

### Create a New School [POST]

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Request (application/json)

    + Attributes (SchoolFillable)

+ Response 201 (application/json)

    + Headers

            Location: /schools/1

    + Attributes 
        + school (School)
            
## School [/schools/{school_id}]

### View a school detail [GET]

+ Parameters
    + school_id: 10 (number) - ID of the School

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response  200 (application/json)

    + Attributes 
        + school (School)
        

### Edit [PUT]

+ Parameters
    + school_id: 1 (number) - ID of the School

+ Request (application/json)

    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
            
    + Attributes (SchoolFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + school (School)


### Delete [DELETE]

+ Parameters
    + school_id: 1 (number) - ID of the School

+ Request (application/json)

    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w


+ Response 204


## School Classes Collection [/school-classes{?_q,_sort,_with}]

### List School Classes [GET]

+ Parameters
    + _q (string, optional) - Fulltext search.
    + _sort (string, optional) - Nome da coluna para ordenação. 
    + _with (string, optional) - Nome da relação a ser incluída na resposta.
        + Members 
            + grade - Ano da turma
            + shift - Turno
            + students - Estudantes
            + schoolCalendar - Ano letivo a qual a turma pertence
            + subjects - Disciplinas ministradas na turma

+ Request (application/json)

    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response 200 (application/json)

    + Attributes 
        + Include Paginator
        + data (array) 
            + (SchoolClass)
    
### Create a new school class [POST]

+ Request (application/json)
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
            
    + Attributes (SchoolClassFillable)
            
+ Response 200 (application/json) 
    
    + Attributes 
        + school_class (SchoolClass)
            

## School Class [/school-classes/{school_class_id}{?_with}]

+ Parameters
    - school_class_id (number) - ID of the school class

### View a school class detail [GET]

+ Parameters
    + _with (string, optional) - Nome da relação a ser incluída na resposta.
        + Members 
            + grade
            + shift

+ Request 
    + Headers

            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response 200 (application/json)

    + Attributes 
        + school_class (SchoolClass)


### Edit [PUT]

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
            
    + Attributes (SchoolClassFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + school_class (SchoolClass)

            
### Delete [DELETE]

+ Response 204




## School Calendar Collection [/school-calendars{?_q,_sort,_with}]

`School Calendar` é considerado nessa api como a definição do ano letivo,
contendo fases fases avaliativas do ano (Ex.: bimestres), feriados, férias,
inicio e fim do ano.

### List School Calendars [GET]

+ Parameters
    + _q (string, optional) - `Fulltext search. 
        Existem mais parametros para filtragem de dados.
        Veja as possibilidades 
        [Filtering]#https://github.com/keviocastro/laravel-api-handler#filtering`

    + _sort (string, optional) - Nome da coluna para ordenação. 
    + _with (string, optional) - Nome da relação a ser incluída na resposta.
        + Members 
            + schoolClasses - Turmas do ano letivo
            + schoolCalendarPhases - Fases avaliativas do ano letivo

+ Request (application/json)

    + Headers
            
            authorization: Bearer <token_id>

+ Response 200 (application/json)

    + Attributes 
        + Include Paginator
        + data (array) 
            + (SchoolCalendar)
    
### Create a new school calendar [POST]

+ Request (application/json)
    + Headers
            
            authorization: Bearer <token_id>
            
    + Attributes (SchoolCalendarFillable)
            
+ Response 200 (application/json) 
    
    + Attributes 
        + school_calendar (SchoolCalendar)
            

## School Calendar [/school-calendars/{school_calendar_id}{?_with}]

+ Parameters
    - school_calendar_id (number) - ID of the school class

### View a school calendar detail [GET]

+ Parameters
    + _with (string, optional) - Nome da relação a ser incluída na resposta.
        + Members 
            + schoolClasses - Turmas do ano letivo
            + schoolCalendarPhases - Fases avaliativas do ano letivo

+ Request 
    + Headers

            authorization: Bearer <token_id>

+ Response 200 (application/json)

    + Attributes 
        + school_class (SchoolClass)


### Edit [PUT]

+ Request 
    + Headers
            
            authorization: Bearer <token_id>
            
    + Attributes (SchoolCalendarFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + school_calendar (SchoolCalendar)

            
### Delete [DELETE]

+ Response 204






# Group People

## Students Collection [/students{?_q,_sort,_with}]

### List students [GET]

+ Parameters
    + _q (string, optional) - Fulltext search
    + _sort (string, optional) - Nome da coluna para ordenação. 
    + _with (string, optional) - Nome da relação a ser incluida na resposta
        + Members
            + studentResponsible
            + person
            + schoolClass
            + schoolClass.grade
            + schoolClass.shift

+ Request (application/json)
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response 200 (application/json)

    + Attributes 
        + Include Paginator 
        + data (array)
            + (Student)

# Group Students

Ações relacionadas a informações dos alunos: cadastrais, indicadores de desempenho
e relatórios como "Boletim anual do aluno" e "Histórico escolar".

## Annual Report [/students/{student_id}/annual-report{?school_calendar_id}]

### Annual Report [GET]

+ Parameters
    + school_calendar_id (required, number) - ID do ano letivo

+ Request 
    + Headers
    
            authorization: Bearer {token_id}
            
+ Response 200 (application/json)

    + Attributes (object)
        + averages (array) - Médias por disciplina no ano letivo
            + (object)
                + include (SchoolCalendarPhase)
                + subject_average (array)
                    + (object)
                        + include (Subject)
                        + average: 7.2 - Média do aluno para a disciplina na fase do ano
                        + student_grades (array)
                            + (object)
                                + include (StudentGrade)
                                + assessment (Assessment)
        + absences (array) - Faltas no ano letivo
            + (object)
                + school_calendar_phase_id: 1
                + subject_id: 1 
                + absences: 6
        + subjects (array[Subject]) - `Disciplinas cursadas no ano`


## Annual Student Summary [/students/{student_id}/annual-summary{?school_calendar_id,school_calendar_phase_id}]

### View a annual student summary [GET]

+ Parameters
    + school_calendar_id (required, number)       - `ID do ano letivo`

+ Request 
    + Headers
    
            authorization: Bearer {token_id}
            
+ Response 200 (application/json)

    + Attributes (object)
        + absences (object)
            + total: 22 (number) - Total de faltas do aluno no ano letivo
        + best_average (object) - Melhor média do aluno no ano
            + include (Subject)
            + average: 9.5 (number) - Média
            + average_calculation: `(7.8 + 8.5)/2` (string) - Calculo da média
            + student_grades (array) - Notas do aluno que compõem a média 
                + (object)
                    + include (StudentGrade)
                    + assessment (Assessment) 
        + low_average (object) - Pior média do aluno no ano
            + include (Subject)
            + average (number)
            + average_calculation (string)
            + student_grades (array) 
                + (object)
                    + include (StudentGrade)
                    + assessment (Assessment) 

            
# Group Lessons

`Lessons` são as aulas programadas para as turmas de uma escola.

## Lessons Collection [/lessons{?_q,_sort,_with}]

### List lessons [GET]

+ Parameters
    + _q (string, optional) - Fulltext search
    + _sort (string, optional) - Nome da coluna para ordenação. 
    + _with (string, optional) Nome da relação a ser incluida da resposta.
        + Members
            + schoolClass
            + schoolClass.grade
            + schoolClass.shift
            + subject

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response 200 (application/json)

    + Attributes 
        + Include Paginator
        + data (array)
            + (Lesson)

### Create a new lesson [POST]

+ Request (application/json)
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
            
    + Attributes (LessonFillable)
            
+ Response 200 (application/json) 
    
    + Attributes 
        + lesson (Lesson)


## Lesson [/lessons/{lesson_id}{?_with,attach}]

+ Parameters
    - lesson_id: 1 (number) - ID of the lesson

### View a lesson detail [GET]

+ Parameters
    + _with (string, optional) Nome da relação a ser incluida na resposta.
        + Members
            + attendanceRecords
            + schoolClass
            + schoolClass.grade
            + schoolClass.students
            + schoolClass.shift
            + schoolClass.students.responsibles
            + schoolClass.students.attendanceRecords
            + schoolClass.students.person
    + attach (string, optional) 
        
        Anexa mais informações da aula na responsta. 
        students.last_occurences são as ultimas 2 ocorrencias do aluno. 
        students.attendanceRecord é o registro de chamada da aula para o aluno. 
        students.absenceSummary é um resumo de faltas do aluno, durante todo
        o ano.

        + Members
            + students
            + students.attendanceRecord
            + students.last_occurences
            + students.absenceSummary

+ Request 
    + Headers

            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response 200 (application/json)

    + Attributes 
        + lesson (LessonDetail)

### Edit [PUT]

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
            
    + Attributes (LessonFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + lesson (Lesson)


### Delete [DELETE]

+ Response 204


## Lessons per day [/lessons/per-day{?_with,_q,_sort,start,end}]

### List Lessons per day [GET]

+ Parameters
    + _with (string, optional) Nome da relação a ser incluida da resposta.
        + Members
            + schoolClass
            + schoolClass.grade
            + schoolClass.shift
            + schoolClass.students
            + schoolClass.students.studentResponsible
            + schoolClass.students.attendanceRecords
            + subject
    + start (string, optional) Data inicial 
        + Default: NOW()
    + end (string, optional) Data final
        + Default: NOW() + 15 days 
    + _q (string, optional) - Fulltext search

+ Request 
    + Headers
            
            authorization: Bearer <token id>

+ Response 200 (application/json)

    + Attributes 
        + start: '2016-10-01' (string)
        + end: '2016-10-15' (string)
        + data (array)
            + (object)
                + day: `2016-10-01` (string)
                + lessons (array[Lesson])


# Group Attendance Records

`Attendance Records` são os registros de presenças dos alunos em uma aula, definindo
se o aluno estava ou não presente durante a aula.

## Attendance records Collection [/attendance-records{?_q,_sort,_with}]

### List attendance records [GET]

+ Parameters
    + _q (string, optional) - Fulltext search
    + _sort (string, optional) - Nome da coluna para ordenação. 
    + _with (string) - Nome da relação a ser incluída na resposta
        + Members
            + lesson
            + lesson.schoolClass
            + lesson.schoolClass.grade
            + lesson.schoolClass.shift
            + lesson.subject
            + student.person
            + student.schoolClass

+ Request 
    + Headers

            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response 200 (application/json)

    + Attributes 
        + Include Paginator
        + data (array)
            + (AttendanceRecord)


### Create a new attendance record [POST]

O registro de presença de um aluno em uma aula é único.
Se o registro de presença que já existe for solicitado, será
retornado o registro já existente com as informações atualizadas.

+ Request (application/json)
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
            
    + Attributes (AttendanceRecordFillable)
            
+ Response 201 (application/json) 
    
    + Headers
            
            Location: /attendance_records/1
    
    + Attributes 
        + attendance_record (AttendanceRecord)

+ Response 409 (application/json)

        {
            "message": "The record of the student (student.id = 1 ) to the lesson already exists.",
            "status_code": 409
        }


## Attendance Record [/attendance-records/{id}{?_with}]

+ Parameters
    + id (number) - ID of the attendance record
    

### View a attendance record detail [GET]

+ Parameters
    + _with (string) - Include related models
        + Members
            + lesson
            + lesson.schoolClass
            + lesson.schoolClass.grade
            + lesson.schoolClass.shift
            + lesson.subject
            + student.person
            + student.schoolClass

+ Request 
    + Headers

            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response 200 (application/json)

    + Attributes 
        + attendance_record (AttendanceRecord)

### Edit [PUT]

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
            
    + Attributes (AttendanceRecordFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + attendance_record (AttendanceRecord)




# Group Assessments

`Assessments` são as definições das avaliações que um professor precisar aplicar
aos seus alunos durante uma fase do ano.
Exemplo: No 1º Bimestre o professor precisa avaliar seus alunos com duas provas (N1 e N2),
e a nota do aluno no 1º Bimestre será composta pela conta (N1*0,4)+(N2*0,6)=NOTA_DO_BIMESTRE.

## Assessments Collection [/assessments{?_q,_sort,_with}]

### List assessments [GET]

+ Parameters
    + _q (string, optional) - Fulltext search.
    + _sort (string, optional) - Nome da coluna para ordenação. 
    + _with (string) - Nome da relação a ser incluída na resposta.
        + Members
            + schoolCalendarPhase
            + schoolCalendarPhase.schoolCalendar

+ Request 
    + Headers

            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w

+ Response 200 (application/json)

    + Attributes 
        + Include Paginator
        + data (array)
            + (Assessment)

# Group Occurrence 

`Occurrence` são registros de ocorrências registrar por professor em relação aos alunos.

## Occurrence Collection [/occurences{?_q,_sort,_with}]

### Create a new Occorence [POST]

+ Request (application/json)
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
    
    + Attributes (OccurenceFillable)

+ Response 201 (application/json) 
    
    + Attributes 
        + occurence (Occurence)
        
    

### List occurences [GET]

+ Parameters
    + _q (string, optional) - Fulltext search.
    + _sort (string, optional) - Nome da coluna para ordenação. 
    + _with (string) - Nome da relação a ser incluída na resposta.
        + Members
            + aboutPerson
            + level

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
    
+ Response 200 (application/json)

    + Attributes 
        + Include Paginator
        + data (array)
            + (Occurence)

## Occurence [/occurences/{id}]

### View a occurence detail [GET]

+ Parameters
    + id: 1 (number) - ID of the occurence

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
    
+ Response 200 (application/json)
    
    + Attributes 
        + Occurence (Occurence)

### Edit [PUT]

+ Parameters
    + id: 1 (number) - ID of the occurence

+ Request (application/json)

    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
            
    + Attributes (OccurenceFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + Occurence (Occurence)

### Delete [DELETE]

+ Request (application/json)
    + Headers
    
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
    

+ Response 204

# Group Student Grades

`Student Grades` São registo de notas de cada aluno em suas diciplinas nos periodos e turmas pertencentes a ele.

## Student grades Collection [/student_grades{?limit,offset,q,sort,field,with}]

### Create a new Student Grades [POST]

+ Request (application/json)
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
    
    + Attributes (StudentGradeFillable)

+ Response 201 (application/json) 
    
    + Attributes 
        + StudentGrade (StudentGrade)
        
### List Student Grades [GET]

+ Parameters
    + q (string, optional) - Fulltext search.
    + sort (string, optional) - Nome da coluna para ordenação. 
    + limit (number, optional) - Limite por página.
    + field (string, optional) - Nome da coluna e valor para filtrar resultados.
    + with (string) - Nome da relação a ser incluída na resposta.
        + Members
            + student
            + subject
            + assessment
            + schoolClass

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
    
+ Response 200 (application/json)

    + Attributes 
        + Include Paginator
        + data (array)
            + (StudentGradeWithRelation)

## Student Grades [/student-grades/{id}{?with}]

### View a Student Grades detail [GET]

+ Parameters
    + id: 1 (number) - ID of the occurence
    + with (string) - Nome da relação a ser incluída na resposta.
        + Members
            + student
            + subject
            + assessment
            + schoolClass

+ Request 
    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
    
+ Response 200 (application/json)
    
    + Attributes 
        + StudentGradeWithRelation (StudentGradeWithRelation)

### Edit [PUT]

+ Parameters
    + id: 1 (number) - ID of the Student Grades

+ Request (application/json)

    + Headers
            
            authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczovL2xvZ29zLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1N2MwODQwZGVhZTA5NTQ3MWFiYTQwOTMiLCJhdWQiOiJ3Mjd6MXY5eFJQQnVycWFYNmxEcXNNSTJ1TldocXgwdiIsImV4cCI6MTQ3ODQ1MjI3MSwiaWF0IjoxNDc1ODYwMjcxfQ.TyXdSxKWVaqGb9Y7uJh44Ybz807DLtUWNxw__K8JU7w
            
    + Attributes (StudentGradeFillable)
            
+ Response 200 (application/json)
    
    + Attributes 
        + StudentGrade (StudentGrade)


# Data structure

## Students

+ id: 1 (number) - Identificador único do registro de nota do aluno
+ Include (StudentsFillable) - object imputaveis
+ subjects (array)
    + (Subject)
+ schoolCalendarPhase (array)
    + (SchoolCalendarPhase)
+ StudentGrade (array)
    + (StudentGrade)

## StudentsFillable

+ person_id: 11 (number) - Identificador único do registro de people
+ school_class_id: 22 (number) - indentificador de uma turma

## StudentGradeFillable

+ grade: 7.5 (number) - Valor de resulta do aluno na avaliação

## StudentGrade

+ id: 1 (number) - Identificador único do registro de nota do aluno
+ Include (StudentGradeFillable) - object imputaveis
+ assessment_id: 1 (number) - Identificador da avaliação
+ student_id: 1 (number) - Id do aluno
+ subject_id: 1 (number) - Disciplina relacionada a turma a qual o aluno realizou a avaliação

## StudentGradeWithRelation

+ Include (StudentGrade)
+ assessment (Assessment)
+ student (Student)
+ subject (Subject)

## OccurenceFillable (object)

+ comment: fulano fez isso (string) - descrição sobre os fatos da occorencia
+ level_id: 1 (number) - Nivel da occorencia
+ about_person_id: 2 (number) - ID do usuario que esta recebendo a occorencia

## Occurence (object)

+ id: 1 (number) - ID da occorencia
+ Include (OccurenceFillable)
+ created_at: `2016-08-30 13:17:11` (string) - Data de criação
+ updated_at: `2016-08-30 13:17:11` (string) - Data da ultima alteração

## Level 

+ id: 1 (number)
+ name: Grave (string)

## Assessment (object)

+ id: 1 (number) - Identificador único da avaliação/nota
+ name: Nota N1 - Descrição da avaliação/nota
+ schoolCalendarPhase (SchoolCalendarPhase)

## SchoolCalendarPhase

+ id: 1 (number) - Identificador único da fase avaliativa
+ name: 1º Bimestre (string)
+ start: `2016-02-01` (string) - Data inicial do período avaliativo
+ end: `2016-04-01` (string) - Ultimo dia do período avaliativo
+ schoolCalendar (SchoolCalendar)

## SchoolCalendar (object)

+ id: 1 (number) - Identificador único da fase avaliativa
+ include (SchoolCalendarFillable)

## SchoolCalendarFillable (object)

+ year: 2014 (number) - Ano de referência
+ start: `2016-02-01` - Inicio do ano letivo
+ end: `2016-12-10` - Fim do ano letivo
 

## SchoolFillable (object)

+ name: Escola luz do saber (string) - Nome da escola

## School (SchoolFillable)

+ id: 1 (number) - Identificador único da escola
+ updated_at: `2016-08-30 13:17:11` (string) - Data da ultima alteração da escola
+ created_at: `2016-08-30 13:17:11` (string) - Data de cadastro

## SchoolClassBase (object)

+ identifier: A (string) - Abreviação/identificação da turma. Exmplo: B, para segunda turma do 1º ano (de 1 Ano B).

## SchoolClassFillable (SchoolClass)

+ grade_id: 1 (number) - Id do ano estudantíl.
+ shift_id: 1 (number) - Id do turno.
+ school_calendar_id: 1 (number) - Ano letivo em que a turma existe. 

## SchoolClass (SchoolClassBase)

+ id: 1 (number) - Identificador único da turma.
+ grade (Grade) - Ano estudantíl (Jardim I/1º Ano/...) da turma.
+ shift (Shift) - Turno (vespertino/matutino/...) da turma.
+ schoolCalendar (SchoolCalendar)

## SchoolClassSubject

+ id: 1 (number) - Identificador único da disciplina em uma turma.
+ school_class_id - Identificador da turma
+ subject_id - Identificador da disciplina

## Grade (object)

+ id: 1 (number) - Identificador único de um ano estudantíl. 
+ name: 3 Ano (string) - Nome do ano estudantíl. Exemplos: 2 Ano, 3 Ano, Jardim I, Jardim II.

## Shift (object)

+ id: 1 (number) - Identificador único do turno.
+ name: Matutino (string) - Nome do turno. Exmplo: Vespertino, matutino, noturno.


## Subject (object)

+ id: 1 (number) - Identificador único da disciplina.
+ name: Matématica  (string) - Nome da disciplina. Ex.: Matématica, Português, Fisica.

## LessonBase (object)

+ start: `2016-08-30 13:17:11` (string) - Data e horário de inicio da aula.
+ end: `2016-08-30 13:17:11` (string) - Data e horário de termino da aula.

## LessonFillable (object)

+ school_class_id: 1 (number) - Identificador único da turma.
+ subject_id: 1 (number) - Identificador único da disciplina (Matématica, física, ...).
+ Include LessonBase

## Teacher (object)

+ id: 1 (number) - Identificador único do professor
+ Include (Person)

## Lesson (object)

+ id: 1 (number) - Identificador único  da aula.
+ created_at: `2016-08-30 13:17:11` (string) - Data de criação
+ updated_at: `2016-08-30 13:17:11` (string) - Data da ultima alteração
+ teacher (Teacher)
+ Include (LessonBase)
+ school_class (SchoolClass)
+ subject (Subject)

## LessonDetail (object)

+ Include Lesson
+ students (array)
    + (object)
        + Include (Student)
        + attendance_record (AttendanceRecord)
        + last_occurences (array[Occurence])
        + absence_summary (object)
            + percentage_absences_reprove: 25 - Percentual máximo de faltas as aulas para não ser reprovado
            + total_lessons_year: 200 - total de aulas programadas no ano da mesma disciplina
            + total_absences_year: 22 - total de faltas que o aluno tem no ano da mesma disciplina

## Person (object)

+ id: 1 (number) - Identificador único da pessoa
+ name: Caio Fernando Chaves (string) - Nome
+ age: 15 (number) - Idade
+ birthday: `2001-04-21` (string) - Data de aniversário
+ piture: `https://randomuser.me/api/portraits/lego/6.jpg` (string) - Foto
+ gender: male (string)
+ `place_of_birth` (City) - Cidade de nascimento
+ more: Mais detalhes sobre a pessoa (string)

## Student (object)

+ Include Person
+ class (SchoolClass)
+ responsible (array)
    + (Person)

## City (object)

+ id: 1 (number) - Identificador único da cidade
+ name: Goiânia (string) - Nome da cidade
+ state_id (number)

## State (object)

+ id: 1 (number) - Identificador único do estado
+ name: Goiás (string) - Nome
+ federated_unit: GO (string) - Código de unidade federativa

## AttendanceRecordFillable (object)

+ lesson_id: 1 (number) - Identificador único da aula relacionada
+ student_id: 1 (number) - Identificador único do aluno
+ presence: 1 (number) - Presença do aluno na aula
                         0 Faltou a aula
                         1 Estava presente
                         2 Falta abonada

## AttendanceRecord (object)

+ id: 1 (number) - Identificador único do registro de presença
+ Include AttendanceRecordFillable
+ created_at: `2016-08-30 13:17:11` (string) - Data de criação
+ updated_at: `2016-08-30 13:17:11` (string) - Data da ultima alteração


## Paginator (object)

+ total: 25 (number) - Total de resultados encontrados
+ per_page: 15 (number) - Quantidade de resultados por página
+ current_page: 1 (number) - Página atual
+ last_page: 2 (number) - Ultima página
+ next_page_url: `http://localhost/api/<resource>?page=2` (string, nullable) - Url para resultados da proxima página
+ prev_page_url: null (string, nullable) - Url para resultados da página anterior
+ from: 1 (number) - Número inicial de resultados de paginação da página atual
+ to: 15 (number) - Número final de resultados de paginação da página atual